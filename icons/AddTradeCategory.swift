//
//  AddTradeCategory.swift
//  app ui
//
//  Created by AuthorName on 2018/12/4.
//  Copyright Â© 2018 CompanyName. All rights reserved.
//
//  Generated by PaintCode
//  http://www.paintcodeapp.com
//



import UIKit

public class AddTradeCategory : NSObject {

    //// Drawing Methods

    @objc dynamic public class func drawAdd(frame: CGRect = CGRect(x: 0, y: 0, width: 70, height: 70)) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()!

        //// Color Declarations
        let fillColor = UIColor(red: 0.957, green: 0.957, blue: 0.957, alpha: 1.000)
        let strokeColor = UIColor(red: 0.733, green: 0.647, blue: 0.439, alpha: 1.000)
        let fillColor2 = UIColor(red: 0.733, green: 0.647, blue: 0.439, alpha: 1.000)

        //// Rectangle Drawing
        let rectanglePath = UIBezierPath(rect: CGRect(x: -148, y: -437, width: 375, height: 667))
        fillColor.setFill()
        rectanglePath.fill()


        //// Group
        context.saveGState()
        context.beginTransparencyLayer(auxiliaryInfo: nil)

        //// Clip Clip
        let clipPath = UIBezierPath()
        clipPath.move(to: CGPoint(x: frame.minX + 5, y: frame.minY))
        clipPath.addLine(to: CGPoint(x: frame.minX + 65, y: frame.minY))
        clipPath.addCurve(to: CGPoint(x: frame.minX + 70, y: frame.minY + 5), controlPoint1: CGPoint(x: frame.minX + 67.76, y: frame.minY), controlPoint2: CGPoint(x: frame.minX + 70, y: frame.minY + 2.24))
        clipPath.addLine(to: CGPoint(x: frame.minX + 70, y: frame.minY + 65))
        clipPath.addCurve(to: CGPoint(x: frame.minX + 65, y: frame.minY + 70), controlPoint1: CGPoint(x: frame.minX + 70, y: frame.minY + 67.76), controlPoint2: CGPoint(x: frame.minX + 67.76, y: frame.minY + 70))
        clipPath.addLine(to: CGPoint(x: frame.minX + 5, y: frame.minY + 70))
        clipPath.addCurve(to: CGPoint(x: frame.minX, y: frame.minY + 65), controlPoint1: CGPoint(x: frame.minX + 2.24, y: frame.minY + 70), controlPoint2: CGPoint(x: frame.minX, y: frame.minY + 67.76))
        clipPath.addLine(to: CGPoint(x: frame.minX, y: frame.minY + 5))
        clipPath.addCurve(to: CGPoint(x: frame.minX + 5, y: frame.minY), controlPoint1: CGPoint(x: frame.minX, y: frame.minY + 2.24), controlPoint2: CGPoint(x: frame.minX + 2.24, y: frame.minY))
        clipPath.close()
        clipPath.usesEvenOddFillRule = true
        clipPath.addClip()


        //// Bezier Drawing
        let bezierPath = UIBezierPath()
        bezierPath.move(to: CGPoint(x: frame.minX + 5, y: frame.minY))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 65, y: frame.minY))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 70, y: frame.minY + 5), controlPoint1: CGPoint(x: frame.minX + 67.76, y: frame.minY), controlPoint2: CGPoint(x: frame.minX + 70, y: frame.minY + 2.24))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 70, y: frame.minY + 65))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 65, y: frame.minY + 70), controlPoint1: CGPoint(x: frame.minX + 70, y: frame.minY + 67.76), controlPoint2: CGPoint(x: frame.minX + 67.76, y: frame.minY + 70))
        bezierPath.addLine(to: CGPoint(x: frame.minX + 5, y: frame.minY + 70))
        bezierPath.addCurve(to: CGPoint(x: frame.minX, y: frame.minY + 65), controlPoint1: CGPoint(x: frame.minX + 2.24, y: frame.minY + 70), controlPoint2: CGPoint(x: frame.minX, y: frame.minY + 67.76))
        bezierPath.addLine(to: CGPoint(x: frame.minX, y: frame.minY + 5))
        bezierPath.addCurve(to: CGPoint(x: frame.minX + 5, y: frame.minY), controlPoint1: CGPoint(x: frame.minX, y: frame.minY + 2.24), controlPoint2: CGPoint(x: frame.minX + 2.24, y: frame.minY))
        bezierPath.close()
        strokeColor.setStroke()
        bezierPath.lineWidth = 2
        context.saveGState()
        context.setLineDash(phase: 0, lengths: [4, 3])
        bezierPath.stroke()
        context.restoreGState()


        context.endTransparencyLayer()
        context.restoreGState()


        //// Bezier 3 Drawing
        let bezier3Path = UIBezierPath()
        bezier3Path.move(to: CGPoint(x: frame.minX + 36.38, y: frame.minY + 34.62))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 44, y: frame.minY + 34.62))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 44, y: frame.minY + 37.38))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 36.38, y: frame.minY + 37.38))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 36.38, y: frame.minY + 45))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 33.62, y: frame.minY + 45))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 33.62, y: frame.minY + 37.38))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 26, y: frame.minY + 37.38))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 26, y: frame.minY + 34.62))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 33.62, y: frame.minY + 34.62))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 33.62, y: frame.minY + 27))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 36.38, y: frame.minY + 27))
        bezier3Path.addLine(to: CGPoint(x: frame.minX + 36.38, y: frame.minY + 34.62))
        bezier3Path.close()
        bezier3Path.usesEvenOddFillRule = true
        fillColor2.setFill()
        bezier3Path.fill()
    }

}
